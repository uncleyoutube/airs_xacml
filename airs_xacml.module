<?php

/**
 * Implements hook_islandora_ingest_steps
 */
function airs_xacml_islandora_ingest_steps(array $form_state) {
  return array(
    'airs_xacml_policy' => array(
      'type'=> 'callback',
      'weight' => 9, 
      'module' => 'airs_xacml',
      'do_function' => array(
        'function' => 'airs_xacml_apply_policy',
        'args' => array(),
      ),
      'undo_function' => array(
        'function' => 'islandora_xacml_editor_undo_policy',
        'args' => array(),
      ),
    ),
  );
}

function airs_xacml_apply_policy(&$form_state) {
  // DECLARATIONS
  global $user;
  $userAccess = $form_state['islandora']['step_storage']['xml_form_builder_metadata_step']['values']['userAccess'];
  $contributors = $form_state['islandora']['step_storage']['xml_form_builder_metadata_step']['values']['contributors'];
  $themes = $form_state['islandora']['step_storage']['xml_form_builder_metadata_step']['values']['themes-tags'];
  $object = $form_state['islandora']['objects'][0];

  // create new IslandoraXacml object, link it to the object being ingested
  $xacml = new IslandoraXacml($object);

  // allow the user to view and manage the file
  // the administrative role gets this by default
  $xacml->viewingRule->addUser(array($user->name));
  $xacml->managementRule->addUser(array($user->name));

  if ($userAccess != 'User only') {
    // grabs all users listed as collaborators
    foreach ($contributors as $name) {
      $xacml->viewingRule->addUser($name['namePart']);
      $xacml->managementRule->addUser($name['namePart']);
    }

    // use the userAccess field of the form to determine extra permissions
    switch($userAccess) {
      case 'Public':
        $xacml->viewingRule->addRole(array('anonymous user', 'authenticated user'));
        break;

      case 'Registered users':
        $xacml->viewingRule->addRole(array('authenticated user'));
        break;

      case 'My sub-theme':
        // returns all themes listed in the AIRS Themes field
        foreach ($themes as $theme) {
          // checks if the listing begins with Subtheme
          if (is_string($theme) && strlen($theme) > 6 
              && strcmp(substr($theme, 0, 7), 'Subtheme')) {
            $subthemeID = 'st'.substr($theme, 9, 3); 
            $xacml->viewingRule->addRole(array($subthemeID));
            $xacml->managementRule->addRole(array($subthemeID));
          }
        }
        break;
    }
  }
  // save the policy
  $xacml->writeBackToFedora();
}
